/* set the color scheme of the overall project*/
:root {
    /* https://color.adobe.com/es/search?q=Happy&t=term */
    --darker-blue: #021F59;
    --dark-blue: #024873;
    --ligter-blue: #66BCF2;
    --light-blue: #3D90D9;
    --light-orange: #F2AD94;
}

*,
*::before,
*::after {
    box-sizing: inherit;
    margin: 0;
    padding: 0;
}

/* globally set the box sizing and some font default styles */
html {
    box-sizing: border-box;
    height: 100%;
    
    font-family: 'Handjet', cursive;
    text-transform: uppercase;
    letter-spacing: 2px;
    color: white;

    width: 100vw;
    height: 100vh;
}

/* set the layout of the page with grid */ 
body {
    height: 100%;
    
    background-color: var(--ligter-blue);
    
    display: grid;
    justify-content: center;
    align-content: center;
}

/* general style of text in buttons */
button {
    font-weight: 700;
    text-transform: inherit;
    color: white;
    font-size: 1rem;
}

/* align the logo items and give them the proper sizing*/
.logo {
    display: flex;
    align-items: center;
    gap: 10px;
}

.logo i {
    font-size: 5rem;
}

.logo i:last-of-type {
    font-size: 4rem;
}

/* ----------------- game initializer section ------------------------------- */

/*  Set the layout of the game initializer section */
.game-initializer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 50px;
    
    width: 100vw;
    height: 100vh;
}

/* style the container section of the player picker elements
   and set the layout with grid */
.game-initializer .player-picker {
    display: grid;
    grid-template-rows: 4rem 1fr;
    place-items: center;
    
    height: 250px;
    width: 50%;
    
    background-color: var(--dark-blue);
    border-radius: 1rem;
    box-shadow: 0 10px 10px rgba(0, 0, 0, 0.5);
    font-size: 3rem;
}

/* Style the sign selector box and set some layout with grid*/ 
.game-initializer .sign-selector {
    display: grid;
    grid-template-columns: 1fr 1fr;

    width: 80%;
    height: 80%;
    
    border-radius: 1rem;
    overflow: hidden;
    background-color: var(--darker-blue);
    padding: 10px;
    position: relative;
}

/* Target the input radio buttons used to catch the sign */
.game-initializer [class^="select-"] {
    appearance: none;
    outline: none;
    cursor: pointer;
    
    position: absolute;
    
    width: 50%;
    height: 100%;
}

/* position those elements relative to the box of the sign selector*/
.game-initializer [class^="select-"]:first-of-type {
    left: 0;
}
.game-initializer [class^="select-"]:last-of-type {
    right: 0;
}

/* Use the element "section" to display the signs via SVG */
.game-initializer .sign--x {
    background: url(./assets/xmark-solid.svg);
}

/* when the "x" sign is checked (radio button) change the background color */
.game-initializer [class^="select-"]:first-of-type:checked ~ .sign--x {
    background-color: var(--light-blue);
}

/* Use the element "section" to display the signs via SVG */
.game-initializer .sign--o {
    background: url(./assets/o-solid.svg);
}

/* when the "o" sign is checked (radio button) change the background color */
.game-initializer [class^="select-"]:last-of-type:checked ~ .sign--o {
    background-color: var(--light-blue);
}

/* Set correctly the background image representation with "background" properties
   and set a transition to animate the background-color change */
.game-initializer .sign {
    background-position: center;
    background-repeat: no-repeat;
    background-size: 40% 100%;
    overflow: hidden;
    border-radius: 1rem;
    transition: 0.3s ease;
}

/* give som style to the button of the game-initializer*/
.game-initializer .start-button {
    height: 50px;
    width: 20%;
    border-radius: 1rem;
    box-shadow: inset 0 -3px 2px rgba(0, 0, 0, 0.3);
    background-color: var(--dark-blue);    

    outline: none;
    border: none;

    transition: all 0.3s ease;
}
.game-initializer .start-button:hover {
    background-color: var(--darker-blue);
}

/* --------------------- main layout -----------------------------------------*/

/* set the grid layout and main size of the main */
main {
    display: grid;
    grid-template-columns: 1fr 2fr;

    height: 100vh;
    width: 100vw;
}

/* style the layout of the lateral info section bar*/
main .game-info {
    background-color: var(--dark-blue);
    box-shadow: 5px 0 10px rgba(0,0,0,0.5);

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 2rem;

    font-size: 3rem;
}

/* style the square that displays the current player in turn*/
.game-info h2 {
    display: flex;
    align-items: center;
    gap: 0.5rem;

    padding: 10px 20px;
    background-color: var(--darker-blue);
    border-radius: 2rem;
}

/* classes to change the player sign */
.turn-info-sign.sign--x {
    background-image: url(./assets/xmark-solid-white.svg);
}
.turn-info-sign.sign--o {
    background-image: url(./assets/o-solid-white.svg);
}
.game-info .turn-info-sign {
    background-position: center;
    background-repeat: no-repeat;
    background-size: 100%;
    overflow: hidden;

    height: 60px;
    width: 60px;
}


/* Style the board */
main .board-container {
    display: flex;
    justify-content: center;
    align-items: center;
}
.board-container .board {
    background-color: var(--darker-blue);
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
    border-radius: 2rem;

    width: min(750px,80%);
    height: 80%;

    padding: 2rem;

    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    gap: 0.5rem;
}

.board .tile {
    background-color: var(--ligter-blue);
    background-repeat: no-repeat;
    background-size: 80%;
    background-position: center;

    transition: all 0.3s ease;
}

.board .tile:hover:not(.sign) {
    background-color: var(--light-blue);
    opacity: 0.8;
}

.board .tile.sign.sign--x {
    background-image: url(./assets/xmark-solid.svg);
}
.board .tile.sign.sign--o {
    background-image: url(./assets/o-solid.svg);
}

.board .tile.sign--x:not(.sign):hover {
    background-image: url(./assets/xmark-solid-white.svg);
}
.board .tile.sign--o:not(.sign):hover {
    background-image: url(./assets/o-solid-white.svg);
}

.tile.winning-tile{
    background-color: var(--light-orange);
}

/* give layout to the section that displays the current game info*/
.game-info .stats-info {

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    
    height: 300px;
    width: 70%;
    
    background-color: var(--darker-blue);
    border-radius: 2rem;
    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.5);
}


/* style every entry that reflects the important stats*/
.stats-info .stat {
    height: 25%;
    width: 60%;

    background-color: var(--ligter-blue);
    padding: 10px;
    border-radius: 1rem;
    
    font-size: 1.5rem;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

/* display each player sign in an appropiate stat slot*/
.stats-info .stat > div {
    width: 100%;
    
    display: flex;
    justify-content: center;
    gap: 5px;
}
.stat .sign {
    width: 20px;

    background-position: center;
    background-repeat: no-repeat;
    background-size: 100%;
    overflow: hidden;
}

.stat .sign--x {
    background-image: url(./assets/xmark-solid.svg);
}

.stat .sign--o {
    background-image: url(./assets/o-solid.svg);
}

/* change the color of the font */
.stat p{
    color: black;
    font-weight: bold;
}

/* style the reset game button */
.game-info button {
    width: 70px;
    height: 70px;

    background-color: var(--darker-blue);
    border-radius: 3em;
    border: none;

    font-size: 3rem;

    transition: all 0.3s ease;
}

/* give some style and animation when the button is hovered */
.game-info button:hover {
    background-color: var(--light-blue);
    transform: rotate(-0.5turn);
}

/* ----------------------------- winner info -------------------------------- */

/* style the box that displays who's the winner*/
.round-info {
    background-color: var(--light-blue);

    width: 500px;
    height: 300px;

    border-radius: 2rem;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;

    font-size: 3rem;

    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    z-index: 10;
    transition: 200ms ease-in-out;
}

.round-info.active {
    transform: translate(-50%, -50%) scale(1);
}

.overlay {
    position: fixed;
    opacity: 0;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    pointer-events: none;
    transition: 200ms ease-in-out;
}

.overlay.active {
    position: all;
    opacity: 1;
}


/* styel the buttons of the box*/
.round-info .round-info-buttons {
    display: flex;
    justify-content: center;
    gap: 10px;

    width: 100%;
}

.round-info-buttons > button {
    background-color: var(--dark-blue);
    border-radius: 1rem;
    border: none;

    width: 30%;
    height: 70px;
}

.round-info-buttons > button:hover {
    background-color: var(--darker-blue);
}

/*-------------------- JS dynamically added classes --------------------------*/

.clicked {
    transform: scale(0.95) translateY(5px);
    background-color: var(--darker-blue);
}

.disabled {
    display: none;
}